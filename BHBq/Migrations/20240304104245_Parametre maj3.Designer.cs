// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BHBq.Migrations
{
    [DbContext(typeof(BHBqContext))]
    [Migration("20240304104245_Parametre maj3")]
    partial class Parametremaj3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Calcul")
                        .HasColumnType("TEXT");

                    b.Property<string>("FormatCalcul")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdLot")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrixB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrixH")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrixM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Unite")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Categorie")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Siret")
                        .HasColumnType("TEXT");

                    b.Property<string>("TvaIntracom")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CompteBancaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BIC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdEntreprise")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomBanque")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumCompte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ComptesBancaires");
                });

            modelBuilder.Entity("Entreprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("APE")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Activite")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logo")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomEntreprise")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Siege")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Siret")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("Lot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoefPose")
                        .HasColumnType("TEXT");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdEntreprise")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdLot")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Lots");
                });

            modelBuilder.Entity("Parametre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Explication")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdProjet")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Valeur")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Parametres");
                });

            modelBuilder.Entity("Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Etat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdClient")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomProjet")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projets");
                });
#pragma warning restore 612, 618
        }
    }
}
